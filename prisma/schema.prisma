generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  fullName  String
  email     String    @unique
  password  String
  Role      Role      @default(USER)
  createdAt DateTime  @default(now())
  deletedAt DateTime?

  @@map("users")
}

model Client {
  id        String    @id @default(uuid())
  fullName  String
  cpf       String    @unique
  email     String    @unique
  birthDate DateTime
  phone     String
  createdAt DateTime  @default(now())
  deletedAt DateTime?
  Order     Order[]

  @@map("clients")
}

model Car {
  id        String   @id @default(uuid())
  status    Status   @default(ACTIVED)
  plate     String   @unique
  brand     String
  model     String
  km        Int
  year      Int
  price     Float
  createdAt DateTime @default(now())
  uptadedAt DateTime @updatedAt
  Items     Items[]
  Order     Order[]
}

model Items {
  id    String @id @default(uuid())
  name  String
  carId String
  car   Car    @relation(fields: [carId], references: [id])

  @@index([carId], map: "Items_carId_fkey")
}

model Order {
  id               String      @id @default(uuid())
  clientId         String
  createdAt        DateTime    @default(now())
  uptadedAt        DateTime    @updatedAt
  status           OrderStatus @default(OPEN)
  zipcode          String
  city             String
  state            String
  totalValue       Float
  carId            String
  paymentDate      DateTime?
  cancellationDate DateTime?
  startDate        DateTime?
  endDate          DateTime?
  car              Car         @relation(fields: [carId], references: [id])
  client           Client      @relation(fields: [clientId], references: [id])

  @@index([carId], map: "Order_carId_fkey")
  @@index([clientId], map: "Order_clientId_fkey")
}

enum Role {
  ADMIN
  CLIENT
  USER
}

enum Status {
  ACTIVED
  INACTIVED
  DELETED
}

enum OrderStatus {
  OPEN
  APROVED
  CANCELED
}
